# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mxserver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mxserver.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x0emxserver.proto\"N\n\x0fSymbolParameter\x12\x11\n\tsymbol_id\x18\x01 \x02(\t\x12\x13\n\x0bsymbol_name\x18\x02 \x02(\t\x12\x13\n\x0bsymbol_desc\x18\x03 \x02(\t\"]\n\x11SymbolCreateState\x12\x11\n\tsymbol_id\x18\x01 \x02(\t\x12\x15\n\nstate_code\x18\x02 \x02(\x05:\x01\x30\x12\x1e\n\nstate_desc\x18\x03 \x02(\t:\nSUCCESSFUL\"7\n\rTaskParameter\x12\x13\n\x02id\x18\x01 \x02(\x0b\x32\x07.TaskId\x12\x11\n\ttask_desc\x18\x02 \x02(\t\"\x19\n\x06TaskId\x12\x0f\n\x07task_id\x18\x01 \x02(\t\"R\n\tTaskState\x12\x0f\n\x07task_id\x18\x01 \x02(\t\x12\x15\n\nstate_code\x18\x02 \x02(\x05:\x01\x30\x12\x1d\n\nstate_desc\x18\x03 \x02(\t:\tOK_TO_RUN\"x\n\x13\x43lsInferenceRequest\x12\x0b\n\x03net\x18\x01 \x02(\t\x12\x0e\n\x06prefix\x18\x02 \x02(\t\x12\r\n\x05\x65poch\x18\x03 \x02(\t\x12\x15\n\nbatch_size\x18\x04 \x02(\x05:\x01\x31\x12\x0c\n\x04urls\x18\x05 \x03(\t\x12\x10\n\x05top_k\x18\x06 \x02(\x05:\x01\x31\"\x89\x01\n\x12\x43lsInferenceResult\x12/\n\x06result\x18\x01 \x03(\x0b\x32\x1f.ClsInferenceResult.ResultEntry\x1a\x42\n\x0bResultEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\"\n\x05value\x18\x02 \x01(\x0b\x32\x13.SingleImgClsResult:\x02\x38\x01\"B\n\x12SingleImgClsResult\x12\x13\n\x0btop_k_probs\x18\x01 \x03(\x02\x12\x17\n\x0ftop_k_categorys\x18\x02 \x03(\t\"\x9a\x01\n\x0fRecordIORequest\x12\x12\n\nimage_root\x18\x01 \x02(\t\x12\x16\n\x0elabel_lst_path\x18\x02 \x02(\t\x12,\n\x06\x63onfig\x18\x04 \x03(\x0b\x32\x1c.RecordIORequest.ConfigEntry\x1a-\n\x0b\x43onfigEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"L\n\x13RecordIOCreateState\x12\x15\n\nstate_code\x18\x01 \x02(\x05:\x01\x30\x12\x1e\n\nstate_desc\x18\x02 \x02(\t:\nSUCCESSFUL2\x95\x02\n\x0cMXNetService\x12\x42\n\x16\x63reateClsRecordIOFiles\x12\x10.RecordIORequest\x1a\x14.RecordIOCreateState\"\x00\x12\x36\n\x0c\x63reateSymbol\x12\x10.SymbolParameter\x1a\x12.SymbolCreateState\"\x00\x12)\n\tstartTask\x12\x0e.TaskParameter\x1a\n.TaskState\"\x00\x12;\n\x0c\x63lsInference\x12\x14.ClsInferenceRequest\x1a\x13.ClsInferenceResult\"\x00\x12!\n\x08stopTask\x12\x07.TaskId\x1a\n.TaskState\"\x00')
)




_SYMBOLPARAMETER = _descriptor.Descriptor(
  name='SymbolParameter',
  full_name='SymbolParameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbol_id', full_name='SymbolParameter.symbol_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='symbol_name', full_name='SymbolParameter.symbol_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='symbol_desc', full_name='SymbolParameter.symbol_desc', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=96,
)


_SYMBOLCREATESTATE = _descriptor.Descriptor(
  name='SymbolCreateState',
  full_name='SymbolCreateState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbol_id', full_name='SymbolCreateState.symbol_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state_code', full_name='SymbolCreateState.state_code', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state_desc', full_name='SymbolCreateState.state_desc', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=True, default_value=_b("SUCCESSFUL").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=98,
  serialized_end=191,
)


_TASKPARAMETER = _descriptor.Descriptor(
  name='TaskParameter',
  full_name='TaskParameter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='TaskParameter.id', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='task_desc', full_name='TaskParameter.task_desc', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=193,
  serialized_end=248,
)


_TASKID = _descriptor.Descriptor(
  name='TaskId',
  full_name='TaskId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='TaskId.task_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=250,
  serialized_end=275,
)


_TASKSTATE = _descriptor.Descriptor(
  name='TaskState',
  full_name='TaskState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_id', full_name='TaskState.task_id', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state_code', full_name='TaskState.state_code', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state_desc', full_name='TaskState.state_desc', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=True, default_value=_b("OK_TO_RUN").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=359,
)


_CLSINFERENCEREQUEST = _descriptor.Descriptor(
  name='ClsInferenceRequest',
  full_name='ClsInferenceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='net', full_name='ClsInferenceRequest.net', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prefix', full_name='ClsInferenceRequest.prefix', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='epoch', full_name='ClsInferenceRequest.epoch', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='batch_size', full_name='ClsInferenceRequest.batch_size', index=3,
      number=4, type=5, cpp_type=1, label=2,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='urls', full_name='ClsInferenceRequest.urls', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='top_k', full_name='ClsInferenceRequest.top_k', index=5,
      number=6, type=5, cpp_type=1, label=2,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=361,
  serialized_end=481,
)


_CLSINFERENCERESULT_RESULTENTRY = _descriptor.Descriptor(
  name='ResultEntry',
  full_name='ClsInferenceResult.ResultEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ClsInferenceResult.ResultEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='ClsInferenceResult.ResultEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=555,
  serialized_end=621,
)

_CLSINFERENCERESULT = _descriptor.Descriptor(
  name='ClsInferenceResult',
  full_name='ClsInferenceResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='ClsInferenceResult.result', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CLSINFERENCERESULT_RESULTENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=484,
  serialized_end=621,
)


_SINGLEIMGCLSRESULT = _descriptor.Descriptor(
  name='SingleImgClsResult',
  full_name='SingleImgClsResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='top_k_probs', full_name='SingleImgClsResult.top_k_probs', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='top_k_categorys', full_name='SingleImgClsResult.top_k_categorys', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=623,
  serialized_end=689,
)


_RECORDIOREQUEST_CONFIGENTRY = _descriptor.Descriptor(
  name='ConfigEntry',
  full_name='RecordIORequest.ConfigEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='RecordIORequest.ConfigEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='RecordIORequest.ConfigEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=801,
  serialized_end=846,
)

_RECORDIOREQUEST = _descriptor.Descriptor(
  name='RecordIORequest',
  full_name='RecordIORequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_root', full_name='RecordIORequest.image_root', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label_lst_path', full_name='RecordIORequest.label_lst_path', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='config', full_name='RecordIORequest.config', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_RECORDIOREQUEST_CONFIGENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=692,
  serialized_end=846,
)


_RECORDIOCREATESTATE = _descriptor.Descriptor(
  name='RecordIOCreateState',
  full_name='RecordIOCreateState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state_code', full_name='RecordIOCreateState.state_code', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state_desc', full_name='RecordIOCreateState.state_desc', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=True, default_value=_b("SUCCESSFUL").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=848,
  serialized_end=924,
)

_TASKPARAMETER.fields_by_name['id'].message_type = _TASKID
_CLSINFERENCERESULT_RESULTENTRY.fields_by_name['value'].message_type = _SINGLEIMGCLSRESULT
_CLSINFERENCERESULT_RESULTENTRY.containing_type = _CLSINFERENCERESULT
_CLSINFERENCERESULT.fields_by_name['result'].message_type = _CLSINFERENCERESULT_RESULTENTRY
_RECORDIOREQUEST_CONFIGENTRY.containing_type = _RECORDIOREQUEST
_RECORDIOREQUEST.fields_by_name['config'].message_type = _RECORDIOREQUEST_CONFIGENTRY
DESCRIPTOR.message_types_by_name['SymbolParameter'] = _SYMBOLPARAMETER
DESCRIPTOR.message_types_by_name['SymbolCreateState'] = _SYMBOLCREATESTATE
DESCRIPTOR.message_types_by_name['TaskParameter'] = _TASKPARAMETER
DESCRIPTOR.message_types_by_name['TaskId'] = _TASKID
DESCRIPTOR.message_types_by_name['TaskState'] = _TASKSTATE
DESCRIPTOR.message_types_by_name['ClsInferenceRequest'] = _CLSINFERENCEREQUEST
DESCRIPTOR.message_types_by_name['ClsInferenceResult'] = _CLSINFERENCERESULT
DESCRIPTOR.message_types_by_name['SingleImgClsResult'] = _SINGLEIMGCLSRESULT
DESCRIPTOR.message_types_by_name['RecordIORequest'] = _RECORDIOREQUEST
DESCRIPTOR.message_types_by_name['RecordIOCreateState'] = _RECORDIOCREATESTATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SymbolParameter = _reflection.GeneratedProtocolMessageType('SymbolParameter', (_message.Message,), dict(
  DESCRIPTOR = _SYMBOLPARAMETER,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:SymbolParameter)
  ))
_sym_db.RegisterMessage(SymbolParameter)

SymbolCreateState = _reflection.GeneratedProtocolMessageType('SymbolCreateState', (_message.Message,), dict(
  DESCRIPTOR = _SYMBOLCREATESTATE,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:SymbolCreateState)
  ))
_sym_db.RegisterMessage(SymbolCreateState)

TaskParameter = _reflection.GeneratedProtocolMessageType('TaskParameter', (_message.Message,), dict(
  DESCRIPTOR = _TASKPARAMETER,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:TaskParameter)
  ))
_sym_db.RegisterMessage(TaskParameter)

TaskId = _reflection.GeneratedProtocolMessageType('TaskId', (_message.Message,), dict(
  DESCRIPTOR = _TASKID,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:TaskId)
  ))
_sym_db.RegisterMessage(TaskId)

TaskState = _reflection.GeneratedProtocolMessageType('TaskState', (_message.Message,), dict(
  DESCRIPTOR = _TASKSTATE,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:TaskState)
  ))
_sym_db.RegisterMessage(TaskState)

ClsInferenceRequest = _reflection.GeneratedProtocolMessageType('ClsInferenceRequest', (_message.Message,), dict(
  DESCRIPTOR = _CLSINFERENCEREQUEST,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:ClsInferenceRequest)
  ))
_sym_db.RegisterMessage(ClsInferenceRequest)

ClsInferenceResult = _reflection.GeneratedProtocolMessageType('ClsInferenceResult', (_message.Message,), dict(

  ResultEntry = _reflection.GeneratedProtocolMessageType('ResultEntry', (_message.Message,), dict(
    DESCRIPTOR = _CLSINFERENCERESULT_RESULTENTRY,
    __module__ = 'mxserver_pb2'
    # @@protoc_insertion_point(class_scope:ClsInferenceResult.ResultEntry)
    ))
  ,
  DESCRIPTOR = _CLSINFERENCERESULT,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:ClsInferenceResult)
  ))
_sym_db.RegisterMessage(ClsInferenceResult)
_sym_db.RegisterMessage(ClsInferenceResult.ResultEntry)

SingleImgClsResult = _reflection.GeneratedProtocolMessageType('SingleImgClsResult', (_message.Message,), dict(
  DESCRIPTOR = _SINGLEIMGCLSRESULT,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:SingleImgClsResult)
  ))
_sym_db.RegisterMessage(SingleImgClsResult)

RecordIORequest = _reflection.GeneratedProtocolMessageType('RecordIORequest', (_message.Message,), dict(

  ConfigEntry = _reflection.GeneratedProtocolMessageType('ConfigEntry', (_message.Message,), dict(
    DESCRIPTOR = _RECORDIOREQUEST_CONFIGENTRY,
    __module__ = 'mxserver_pb2'
    # @@protoc_insertion_point(class_scope:RecordIORequest.ConfigEntry)
    ))
  ,
  DESCRIPTOR = _RECORDIOREQUEST,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:RecordIORequest)
  ))
_sym_db.RegisterMessage(RecordIORequest)
_sym_db.RegisterMessage(RecordIORequest.ConfigEntry)

RecordIOCreateState = _reflection.GeneratedProtocolMessageType('RecordIOCreateState', (_message.Message,), dict(
  DESCRIPTOR = _RECORDIOCREATESTATE,
  __module__ = 'mxserver_pb2'
  # @@protoc_insertion_point(class_scope:RecordIOCreateState)
  ))
_sym_db.RegisterMessage(RecordIOCreateState)


_CLSINFERENCERESULT_RESULTENTRY.has_options = True
_CLSINFERENCERESULT_RESULTENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_RECORDIOREQUEST_CONFIGENTRY.has_options = True
_RECORDIOREQUEST_CONFIGENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))

_MXNETSERVICE = _descriptor.ServiceDescriptor(
  name='MXNetService',
  full_name='MXNetService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=927,
  serialized_end=1204,
  methods=[
  _descriptor.MethodDescriptor(
    name='createClsRecordIOFiles',
    full_name='MXNetService.createClsRecordIOFiles',
    index=0,
    containing_service=None,
    input_type=_RECORDIOREQUEST,
    output_type=_RECORDIOCREATESTATE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='createSymbol',
    full_name='MXNetService.createSymbol',
    index=1,
    containing_service=None,
    input_type=_SYMBOLPARAMETER,
    output_type=_SYMBOLCREATESTATE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='startTask',
    full_name='MXNetService.startTask',
    index=2,
    containing_service=None,
    input_type=_TASKPARAMETER,
    output_type=_TASKSTATE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='clsInference',
    full_name='MXNetService.clsInference',
    index=3,
    containing_service=None,
    input_type=_CLSINFERENCEREQUEST,
    output_type=_CLSINFERENCERESULT,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='stopTask',
    full_name='MXNetService.stopTask',
    index=4,
    containing_service=None,
    input_type=_TASKID,
    output_type=_TASKSTATE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MXNETSERVICE)

DESCRIPTOR.services_by_name['MXNetService'] = _MXNETSERVICE

# @@protoc_insertion_point(module_scope)
